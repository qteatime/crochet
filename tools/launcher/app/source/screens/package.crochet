% crochet

local define w = agata-widget;
local define cw = purr-common-widgets;

local abstract state;
local singleton not-started is state;
local type running(process is pp-packaging, logs is cell<list<text>>) is state;
local singleton finished is state;

command ps-package render do
  cw project-window: self.project at: "package" with: [
    w title: "Packaging",
    w space,

    w section: [
      w group: [
        w group-heading: ["Output"],
      ],

      w group: [
        w group-heading: ["Targets"],
        w container: (
          for Target in self.project meta packaging-targets do
            self target-card: Target
          end
        )
      ]
    ]
  ]
end

command ps-package target-card: Target do
  let State = #observable with-value: not-started;

  w switch: State
    | when: { X in X is not-started } then: { _ in self target: Target not-started: State }
    | when: { X in X is running } then: { _ in self target: Target running: State }
    | when: { X in X is finished } then: { _ in self target: Target finished: State };
end

command ps-package target: Target not-started: State do
  w flex-row: [
    w text-button: "Package"
      | on-click: { _ in
          let Process = self start-packaging: Target;
          State <- new running(Process);
        },

    w text: Target title
  ]
end

command ps-package target: Target running: State do
  "Running";
end

command ps-package target: Target finished: State do
  "Finished";
end