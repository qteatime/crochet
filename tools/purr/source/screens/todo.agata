% agata

replace New               -- replaces the current component with New
detach                    -- removes the current component from the tree
append New                -- attaches node to the end of component
prepend New               -- ataches node to the beginning of component
insert-before Ref New     -- inserts node before Ref
insert-after Ref New      -- inserts node after Ref

select Query              -- selects a set of nodes in the tree
broadcast Set.Message     -- broadcasts a message to each component in the set



action restore-item(id);
action complete-item(id);
action remove-item(id);
action rename-item(id, title);
action label-changed(new-title);
action edit-label();

component todo-item-label --title Title --mode %view:
  handle
    on _.clicked(): self.edit-label();
  end;

  label Title;
end

component todo-item-label --title Title --mode %edit:
  handle
    on X.blurred(): self.label-changed(X.value);
  end

  text-input Title;
end

component todo-item --title Title --completed Completed --id Id:
  state Mode = %view;

  handle
    on #completed.checked:
      self.complete-item(Id);

    on #completed.unchecked:
      self.restore-item(Id);

    on #title.label-changed(New-title):
      self.update-item(Id, New-title);
      Mode <- %view;

    on #title.edit-label():
      Mode <- %edit;

    on #destroy.clicked:
      self.remove-item(Id);
      self.detach();
  end

  list-item #Id [
    checkbox #completed --checked Completed;
    todo-item-label #title --title Title --mode Mode;
    icon-button #destroy "times" | style "destroy-button";
  ]
  | when Completed => style "completed";
end

component todo-list --tasks Tasks:
  list [ for Task in Tasks do
    todo-item --title Task.title --completed Task.completed --id Task.id;
  ]
  | style "todo-list";
end
