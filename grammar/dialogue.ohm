Dialogue {
  Program =
    | concatenate end

  concatenate =
    | concatenate word    -- cat
    | word

  word =
    | "\\" "@"              -- at_sign
    | "@" expr              -- expr
    | (~("@" | "\\") any)+  -- chars

  expr =
    | application

  // TODO: tweak this so it's not prone to parsing `@id(not expr)`
  //       as `Load "id", Text "not expr"`
  application =
    | identifier ws<"("> ws<listOf<ws<expr>, ws<",">>> ws<")">  -- application
    | projection

  projection =
    | projection ws<"."> ws<identifier>   -- projection
    | primaryExpr

  primaryExpr =
    | identifier            -- variable
    | text                  -- text
    | number                -- number
    | boolean               -- boolean
    | "(" ws<expr> ws<")">  -- group

  // -- Lexical rules --
  ws<rule> = spaces rule

  id_start = "a".."z"
  id_rest = "a".."z" | "-"
  identifier = id_start id_rest*

  number = digit+

  boolean = kw<"true"> | kw<"false">

  text = "\"" text_character* "\""
  text_character = "\\" any -- escape
                 | any      -- any

  kw<word> = word ~id_rest
}