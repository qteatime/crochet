% crochet

abstract border-option is transform-option;

type border-option--radius-top(value is purr-variable<border-radius>) is border-option;
type border-option--radius-right(value is purr-variable<border-radius>) is border-option;
type border-option--radius-bottom(value is purr-variable<border-radius>) is border-option;
type border-option--radius-left(value is purr-variable<border-radius>) is border-option;

type border-option--width-top(value is purr-variable<line-size>) is border-option;
type border-option--width-right(value is purr-variable<line-size>) is border-option;
type border-option--width-bottom(value is purr-variable<line-size>) is border-option;
type border-option--width-left(value is purr-variable<line-size>) is border-option;

type border-option--color-top(value is purr-variable<color>) is border-option;
type border-option--color-right(value is purr-variable<color>) is border-option;
type border-option--color-bottom(value is purr-variable<color>) is border-option;
type border-option--color-left(value is purr-variable<color>) is border-option;

type border-option--style-top(value is purr-variable<border-style>) is border-option;
type border-option--style-right(value is purr-variable<border-style>) is border-option;
type border-option--style-bottom(value is purr-variable<border-style>) is border-option;
type border-option--style-left(value is purr-variable<border-style>) is border-option;

command border-option--radius-top key = "border-radius-top";
command border-option--radius-right key = "border-radius-right";
command border-option--radius-bottom key = "border-radius-bottom";
command border-option--radius-left key = "border-radius-left";

command border-option--width-top key = "border-width-top";
command border-option--width-right key = "border-width-right";
command border-option--width-bottom key = "border-width-bottom";
command border-option--width-left key = "border-width-left";

command border-option--color-top key = "border-color-top";
command border-option--color-right key = "border-color-right";
command border-option--color-bottom key = "border-color-bottom";
command border-option--color-left key = "border-color-left";

command border-option--style-top key = "border-style-top";
command border-option--style-right key = "border-style-right";
command border-option--style-bottom key = "border-style-bottom";
command border-option--style-left key = "border-style-left";


enum border-radius =
  square,
  rounded,
  fully-rounded;

enum border-style =
  solid,
  dashed,
  dotted,
  double,
  hidden,
  none;


command widget-transform border-radius-top: (X has to-purr-variable) =
  self add-option: new border-option--radius-top(X as purr-variable);

command widget-transform border-radius-right: (X has to-purr-variable) =
  self add-option: new border-option--radius-right(X as purr-variable);

command widget-transform border-radius-bottom: (X has to-purr-variable) =
  self add-option: new border-option--radius-bottom(X as purr-variable);

command widget-transform border-radius-left: (X has to-purr-variable) =
  self add-option: new border-option--radius-left(X as purr-variable);

command widget-transform border-radius-horizontal: X =
  self border-radius-left: X | border-radius-right: X;

command widget-transform border-radius-vertical: X =
  self border-radius-top: X | border-radius-bottom: X;

command widget-transform border-radius: X =
  self border-radius-horizontal: X | border-radius-vertical: X;


command widget-transform border-width-top: (X has to-purr-variable) =
  self add-option: new border-option--width-top(X as purr-variable);

command widget-transform border-width-right: (X has to-purr-variable) =
  self add-option: new border-option--width-right(X as purr-variable);

command widget-transform border-width-bottom: (X has to-purr-variable) =
  self add-option: new border-option--width-bottom(X as purr-variable);

command widget-transform border-width-left: (X has to-purr-variable) =
  self add-option: new border-option--width-left(X as purr-variable);

command widget-transform border-width-horizontal: X =
  self border-width-left: X | border-width-right: X;

command widget-transform border-width-vertical: X =
  self border-width-top: X | border-width-bottom: X;

command widget-transform border-width: X =
  self border-width-horizontal: X | border-width-vertical: X;


command widget-transform border-color-top: (X has to-purr-variable) =
  self add-option: new border-option--color-top(X as purr-variable);

command widget-transform border-color-right: (X has to-purr-variable) =
  self add-option: new border-option--color-right(X as purr-variable);

command widget-transform border-color-bottom: (X has to-purr-variable) =
  self add-option: new border-option--color-bottom(X as purr-variable);

command widget-transform border-color-left: (X has to-purr-variable) =
  self add-option: new border-option--color-left(X as purr-variable);

command widget-transform border-color-horizontal: X =
  self border-color-left: X | border-color-right: X;

command widget-transform border-color-vertical: X =
  self border-color-top: X | border-color-bottom: X;

command widget-transform border-color: X =
  self border-color-horizontal: X | border-color-vertical: X;


command widget-transform border-style-top: (X has to-purr-variable) =
  self add-option: new border-option--style-top(X as purr-variable);

command widget-transform border-style-right: (X has to-purr-variable) =
  self add-option: new border-option--style-right(X as purr-variable);

command widget-transform border-style-bottom: (X has to-purr-variable) =
  self add-option: new border-option--style-bottom(X as purr-variable);

command widget-transform border-style-left: (X has to-purr-variable) =
  self add-option: new border-option--style-left(X as purr-variable);

command widget-transform border-style-horizontal: X =
  self border-style-left: X | border-style-right: X;

command widget-transform border-style-vertical: X =
  self border-style-top: X | border-style-bottom: X;

command widget-transform border-style: X =
  self border-style-horizontal: X | border-style-vertical: X;
