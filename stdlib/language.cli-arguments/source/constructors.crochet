% crochet

command cli command: (Name is text) with: (Args is tuple) do
  let Command = cli exact: Name;
  new cli-command(Name, "", Command, [Command] ++ Args);
end

command cli app: (Name is text) with: (Commands is tuple) =
  new cli-app(Name, "", Commands);

command cli options: (Options is tuple) =
  new cli-options("options", Options);

command cli positional: (Name is text) =
  new cli-positional(Name, "", cli-arg-text);

command cli option: (Key is text) =
  new cli-option(Key, "", cli-arg-text);

command cli exact: (Value is text) =
  new cli-positional("_", "", new cli-arg-exact(Value));


command cli-app name = self.name;
command cli-app name: (Name is text) =
  new cli-app(Name, self description, self commands);

command cli-app description = self.description;
command cli-app description: (Description is text) =
  new cli-app(self name, Description, self commands);

command cli-app commands = self.commands;
command cli-app commands: (Commands is tuple) =
  new cli-app(self name, self description, Commands);


command cli-command name = self.name;
command cli-command name: (Name is text) =
  new cli-command(Name, self description, self lead-argument, self arguments);

command cli-command description = self.description;
command cli-command description: (Description is text) =
  new cli-command(self name, Description, self lead-argument, self arguments);

command cli-command lead-argument = self.command-arg;
command cli-command lead-argument: (Arg is cli-arg) =
  new cli-command(self name, self description, Arg, self arguments);

command cli-command arguments = self.arguments;
command cli-command arguments: (Args is tuple) =
  new cli-command(self name, self description, self lead-argument, self arguments);


command cli-options name = self.name;
command cli-options name: (Name is text) =
  new cli-options(Name, self options);

command cli-options options = self.options;
command cli-options options: (Options is tuple) =
  new cli-options(self name, Options);


command cli-positional name = self.name;
command cli-positional name: (Name is text) =
  new cli-positional(Name, self description, self argument);

command cli-positional description = self.description;
command cli-positional description: (Description is text) =
  new cli-positional(self name, Description, self argument);

command cli-positional argument = self.arg-type;
command cli-positional argument: (Arg is cli-arg-type) =
  new cli-positional(self name, self description, Arg);


command cli-option name = self.key;
command cli-option name: (Name is text) =
  new cli-option(Name, self description, self argument);

command cli-option description = self.description;
command cli-option description: (Description is text) =
  new cli-option(self name, Description, self argument);

command cli-option argument = self.arg-type;
command cli-option argument: (Arg is cli-arg-type) =
  new cli-option(self name, self description, Arg);


command cli-functor name = self argument name;
command cli-functor name: Name = self argument name: Name;

command cli-functor functor = self.functor;

command cli-functor argument = self argument argument;
command cli-functor argument: Arg = self argument argument: Arg;


command cli-arg-single boolean =
  self argument: cli-arg-boolean;

command cli-arg-single text =
  self argument: cli-arg-text;

command cli-arg-single expect: Text =
  self argument: new cli-arg-exact(Text);