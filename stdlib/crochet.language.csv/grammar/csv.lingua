type csv(rows: list)
type row(cells: list)
type cell(value: text)

grammar csv_grammar : csv {
  file =
    | Rs:listOf<row, newline> newline? end    -> csv(Rs)

  row =
    | Cs:nonemptyListOf<cell, ",">            -> row(Cs)

  cell =
    | escaped_cell
    | non_escaped_cell

  escaped_cell =
    | "\"" X:escaped_text "\""                   -> cell(X)

  non_escaped_cell =
    | X:text_data                                -> cell(X)

  token escaped_text =
    | escaped_text_char*
    
  token escaped_text_char =
    | "\"\""
    | ~"\"" any

  token text_data =
    | text_char*

  token text_char =
    | ~separator_char any

  token separator_char =
    | "," | "\"" | newline

  // this diverges a bit
  newline =
    | "\r\n" | "\r" | "\n"
}