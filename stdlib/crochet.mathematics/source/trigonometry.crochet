% crochet

/// The ratio of a circle's circumference to its diameter (approximately 3.14).
command #float-64bit pi = foreign float-64.pi()
test
  assert #float-64bit pi === 3.141592653589793;
end

/// The sine of `X`.
command (X is float-64bit) sin = foreign float-64.sin(X)
test
  assert 2.0 sin === 0.9092974268256817;
end

/// The hyperbolic sine of `X`.
command (X is float-64bit) sinh = foreign float-64.sinh(X)
test
  assert 2.0 sinh === 3.626860407847019;
end

/// The arcsine of `X`.
command (X is float-64bit) asin = foreign float-64.asin(X)
test
  assert 1.0 asin === 1.5707963267948966;
end

/// The hyperbolic arcsine of `X`.
command (X is float-64bit) asinh = foreign float-64.asinh(X)
test
  assert 2.0 asinh === 1.4436354751788103;
end

/// The cosine of `X`.
command (X is float-64bit) cos = foreign float-64.cos(X)
test
  assert 2.0 cos === -0.4161468365471424;
end

/// The hyperbolic cosine of `X`.
command (X is float-64bit) cosh = foreign float-64.cosh(X)
test
  assert 2.0 cosh === 3.7621956910836314;
end

/// The arccosine of `X`.
command (X is float-64bit) acos = foreign float-64.acos(X)
test
  assert 0.5 acos === 1.0471975511965979;
end

/// The hyperbolic arccosine of `X`.
command (X is float-64bit) acosh = foreign float-64.acosh(X)
test
  assert 2.0 acosh === 1.3169578969248166;
end

/// The tangent of `X`.
command (X is float-64bit) tan = foreign float-64.tan(X)
test
  assert 2.0 tan === -2.185039863261519;
end

/// The arctangent of `X`.
command (X is float-64bit) atan = foreign float-64.atan(X)
test
  assert 2.0 atan === 1.1071487177940904;
end

/// The hyperbolic arctangent of `X`.
command (X is float-64bit) atanh = foreign float-64.atanh(X)
test
  assert 0.5 atanh === 0.5493061443340548;
end

/// The hyperbolic tangent of `X`.
command (X is float-64bit) tanh = foreign float-64.tanh(X)
test
  assert 2.0 tanh === 0.9640275800758169;
end

/// Converts from degrees to radians.
command float-64bit degrees-to-radians =
  self * (#float-64bit pi / 180.0)
test
  assert 45.0 degrees-to-radians === 0.7853981633974483;
end

/// Converts from radians to degrees.
command float-64bit radians-to-degrees =
  self / (#float-64bit pi / 180.0)
test
  assert 2.0 radians-to-degrees === 114.59155902616465;
end

/// The cube root of `X`.
command (X is float-64bit) cbrt = foreign float-64.cbrt(X)
test
  assert 9.0 cbrt === 2.080083823051904;
end

/// The square root of `X`.
command (X is float-64bit) sqrt = foreign float-64.sqrt(X)
test
  assert 9.0 sqrt === 3.0;
end