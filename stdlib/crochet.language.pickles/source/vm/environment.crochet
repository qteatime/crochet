% crochet

type environment(
  parent, // environment or nothing
  bindings is cell<map<text, pickles-value>>
);

command #environment empty =
  new environment(
    parent -> nothing,
    bindings -> #cell with-value: #map empty,
  );

command environment clone =
  new environment(
    parent -> self,
    bindings -> #cell with-value: #map empty,
  );

command environment lookup: (Name is text) do
  let Bindings = self.bindings value;
  condition
    when Bindings contains-key: Name =>
      Bindings at: Name;

    when not (self.parent is nothing) =>
      self.parent lookup: Name;

    otherwise =>
      #pickles-vm exception: new pickles-error--undefined-variable(self, Name);
  end
end

command environment define: (Name is text) as: (Value is pickles-value) do
  let Bindings = self.bindings value;
  condition
    when Bindings contains-key: Name =>
      #pickles-vm exception: new pickles-error--conflicting-variable(self, Name, Value);
    
    otherwise do
      self.bindings <- Bindings at: Name put: Value;
      self;
    end
  end
end