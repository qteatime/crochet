% crochet

open crochet.text.parsing.lingua;

abstract pickles-value;

type pickles-module(
  global name is text,
  bindings is map<text, pickles-value>,
  exported is set<text>,
) is pickles-value;

type pickles-parser(
  global name is text,
  global body is ast-expression,
  global location is interval,
  environment is environment
) is pickles-value;

type pickles-anonymous-parser(
  environment is environment,
  global body is ast-expression,
) is pickles-value;

type pickles-function(
  global name is text,
  global formals is list<text>,
  global body is ast-expression,
  environment is environment,
  global location is interval,
) is pickles-value;

type pickles-native-parser(
  global name is text,
  body is ((A) -> result<parser-state, parser-error>),
) is pickles-value;

type pickles-native-function(
  global name is text,
  global formals is list<text>,
  body is function, // (A...) -> pickles-value,
) is pickles-value;

type pickles-literal(
  global value is any, // any Crochet primitive
) is pickles-value;