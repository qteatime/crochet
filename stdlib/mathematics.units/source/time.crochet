% crochet

abstract unit-time;
type unit-milliseconds is unit-time(value is numeric);
type unit-seconds is unit-time(value is numeric);
type unit-minutes is unit-time(value is numeric);
type unit-hours is unit-time(value is numeric);
type unit-days is unit-time(value is numeric);
type unit-time-add is unit-time(left is unit-time, right is unit-time);
type unit-time-sub is unit-time(left is unit-time, right is unit-time);
type unit-time-mul is unit-time(left is unit-time, right is numeric);
type unit-time-div is unit-time(left is unit-time, right is numeric);

// Construction
command (X is numeric) milliseconds = new unit-milliseconds(X);
command (X is numeric) seconds = new unit-seconds(X);
command (X is numeric) minutes = new unit-minutes(X);
command (X is numeric) hours = new unit-hours(X);
command (X is numeric) days = new unit-days(X);

command (X is numeric) millisecond = new unit-milliseconds(X);
command (X is numeric) second = new unit-seconds(X);
command (X is numeric) minute = new unit-minutes(X);
command (X is numeric) hour = new unit-hours(X);
command (X is numeric) day = new unit-days(X);


// Elimination
command unit-milliseconds value = self.value;
command unit-seconds value = self.value;
command unit-minutes value = self.value;
command unit-minutes value = self.value;
command unit-hours value = self.value;
command unit-days value = self.value;
command unit-time-add value = self to-milliseconds;
command unit-time-sub value = self to-milliseconds;
command unit-time-mul value = self to-milliseconds;
command unit-time-div value = self to-milliseconds;


// Conversion
command unit-milliseconds to-milliseconds = self;
command unit-seconds to-milliseconds = (self value * 1000) milliseconds;
command unit-minutes to-milliseconds = self to-seconds to-milliseconds;
command unit-hours to-milliseconds = self to-minutes to-milliseconds;
command unit-days to-milliseconds = self to-hours to-milliseconds;

command unit-milliseconds to-seconds = (self value / 1000) seconds;
command unit-seconds to-seconds = self;
command unit-minutes to-seconds = (self value * 60) seconds;
command unit-hours to-seconds = self to-minutes to-seconds;
command unit-days to-seconds = self to-hours to-seconds;

command unit-milliseconds to-minutes = self to-seconds to-minutes;
command unit-seconds to-minutes = (self value / 60) minutes;
command unit-minutes to-minutes = self;
command unit-hours to-minutes = (self value * 60) minutes;
command unit-days to-minutes = self to-hours to-minutes;

command unit-milliseconds to-hours = self to-seconds to-hours;
command unit-seconds to-hours = self to-minutes to-hours;
command unit-minutes to-hours = (self value / 60) hours;
command unit-hours to-hours = self;
command unit-days to-hours = (self value * 24) hours;

command unit-milliseconds to-days = self to-seconds to-days;
command unit-seconds to-days = self to-minutes to-days;
command unit-minutes to-days = self to-hours to-days;
command unit-hours to-days = (self value / 24) days;
command unit-days to-days = self;

// Operations
command unit-time + (That is unit-time) = new unit-time-add(self, That);
command unit-time - (That is unit-time) = new unit-time-sub(self, That);
command unit-time * (That is numeric) = new unit-time-mul(self, That);
command unit-time / (That is numeric) = new unit-time-div(self, That);

command unit-time === (That is unit-time) =
  self to-milliseconds value === That to-milliseconds value;

command unit-time =/= (That is unit-time) =
  self to-milliseconds value =/= That to-milliseconds value;

command unit-time < (That is unit-time) =
  self to-milliseconds value < That to-milliseconds value;

command unit-time <= (That is unit-time) =
  self to-milliseconds value <= That to-milliseconds value;

command unit-time > (That is unit-time) =
  self to-milliseconds value > That to-milliseconds value;

command unit-time >= (That is unit-time) =
  self to-milliseconds value >= That to-milliseconds value;


command unit-time-add to-milliseconds = (self.left to-milliseconds value + self.right to-milliseconds value) milliseconds;
command unit-time-sub to-milliseconds = (self.left to-milliseconds value - self.right to-milliseconds value) milliseconds;
command unit-time-mul to-milliseconds = (self.left to-milliseconds value * self.right) milliseconds;
command unit-time-div to-milliseconds = (self.left to-milliseconds value / self.right) milliseconds;

command unit-time-add to-seconds = (self.left to-seconds value + self.right to-seconds value) seconds;
command unit-time-sub to-seconds = (self.left to-seconds value - self.right to-seconds value) seconds;
command unit-time-mul to-seconds = (self.left to-seconds value * self.right) seconds;
command unit-time-div to-seconds = (self.left to-seconds value / self.right) seconds;

command unit-time-add to-hours = (self.left to-hours value + self.right to-hours value) hours;
command unit-time-sub to-hours = (self.left to-hours value - self.right to-hours value) hours;
command unit-time-mul to-hours = (self.left to-hours value * self.right) hours;
command unit-time-div to-hours = (self.left to-hours value / self.right) hours;

command unit-time-add to-days = (self.left to-days value + self.right to-days value) days;
command unit-time-sub to-days = (self.left to-days value - self.right to-days value) days;
command unit-time-mul to-days = (self.left to-days value * self.right) days;
command unit-time-div to-days = (self.left to-days value / self.right) days;


// Formatting
command unit-milliseconds format = "[self value] milliseconds";
command unit-seconds format = "[self value] seconds";
command unit-minutes format = "[self value] minutes";
command unit-hours format = "[self value] hours";
command unit-days format = "[self value] days";
command unit-time-add format = "([self.left format] + [self.right format])";
command unit-time-sub format = "([self.left format] - [self.right format])";
command unit-time-mul format = "([self.left format] * [self.right format])";
command unit-time-div format = "([self.left format] / [self.right format])";