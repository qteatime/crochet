% crochet

implement to-doc-unit for doc-unit;

/// Coerces a Crochet value to a doc-unit
command doc-unit as doc-unit =
  self;

implement to-doc-unit for integer;
/// Coerces an integet to a doc-pixels.
command integer as doc-unit =
  new doc-pixels(self);

implement to-doc-unit for float-64bit;
/// Coerces a float-64bit to a doc-percent.
command float-64bit as doc-unit =
  new doc-percent(self);

implement to-doc-unit for nothing;
/// Coerces a nothing to a doc-unit
command nothing as doc-unit =
  doc-unit-unset;


/// Constructs a doc-unit from a numeric value.
command integer as doc-pixels =
  new doc-pixels(self);

command float-64bit as doc-percent =
  new doc-percent(self);

command float-64bit as doc-em =
  new doc-em(self);

implement to-doc-font-family for doc-font-family;
command doc-font-family as doc-font-family =
  self;


implement to-doc-font-family for static-text;

command (Text is static-text) as doc-font-family do
  #doc-font-family from-enum-text: Text;
end

implement to-doc-font-style for doc-font-style;
command doc-font-style as doc-font-style =
  self;


implement to-doc-font-style for static-text;

command (Text is static-text) as doc-font-style do
  #doc-font-style from-enum-text: Text;
end


implement to-doc-font-weight for doc-font-weight;
command doc-font-weight as doc-font-weight =
  self;

implement to-doc-font-weight for static-text;

command (Text is static-text) as doc-font-weight do
  #doc-font-weight from-enum-text: Text;
end

implement to-doc-font-decoration for doc-font-decoration;
command doc-font-decoration as doc-font-decoration =
  self;

implement to-doc-font-decoration for static-text;

command (Text is static-text) as doc-font-decoration do
  #doc-font-decoration from-enum-text: Text;
end


implement to-doc-colour for doc-colour;

command doc-colour as doc-colour =
  self;

implement to-doc-colour for static-text;

command (Code is static-text) as doc-colour do
  let Components = foreign conversion.colour-code-to-components(Code);
  #doc-colour
    red: Components.red
    green: Components.green
    blue: Components.blue
    alpha: Components.alpha;
test
  assert ("#000000" as doc-colour) === (#doc-colour red: 0 green: 0 blue: 0 alpha: 255);
  assert ("#ffffff00" as doc-colour) === (#doc-colour red: 255 green: 255 blue: 255 alpha: 0);
end


implement to-doc-border-style for static-text;

command (Style is static-text) as doc-border-style do
  #doc-border-style from-enum-text: Style;
end