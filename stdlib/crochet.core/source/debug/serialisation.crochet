% crochet

/// Serialises a document to a JSON-friendly format.
command debug-serialisation for: doc-empty =
  [
    tag -> "empty"
  ];

command debug-serialisation for: (X is doc-number) =
  [
    tag -> "number",
    value -> X.value,
  ];

command debug-serialisation for: (X is doc-text) =
  [
    tag -> "text",
    value -> X.value,
    untrusted -> X.value is untrusted-text,
  ];

command debug-serialisation for: (X is doc-boolean) =
  [
    tag -> "boolean",
    value -> X.value,
  ];

command debug-serialisation for: (X is doc-plain-text) =
  [
    tag -> "plain-text",
    value -> X.value,
  ];

command debug-serialisation for: (X is doc-list) =
  [
    tag -> "list",
    items -> X.items map: (self for: _),
  ];

command debug-serialisation for: (X is doc-table) =
  [
    tag -> "table",
    header -> X.header map: (self for: _),
    rows -> X.rows map: (self for: _),
  ];

command debug-serialisation for: (X is doc-table-row) =
  X.cells map: (self for: _);

command debug-serialisation for: (X is doc-flow) =
  [
    tag -> "flow",
    items -> X.items map: (self for: _),
  ];

command debug-serialisation for: (X is doc-flex-row) =
  [
    tag -> "flex-row",
    items -> X.items map: (self for: _),
    gap -> self for: X.gap,
  ];

command debug-serialisation for: (X is doc-flex-column) =
  [
    tag -> "flex-column",
    items -> X.items map: (self for: _),
    gap -> self for: X.gap,
  ];

command debug-serialisation for: (X is doc-fixed-layout) =
  [
    tag -> "fixed-layout",
    items -> X.items map: (self for: _),
    width -> self for: X.gap,
    height -> self for: X.gap,
  ];

command debug-serialisation for: (X is doc-position) =
  [
    tag -> "position",
    items -> X.items map: (self for: _),
    position -> self for: X.position,
    anchor -> self for: X.position,
  ];

command debug-serialisation for: (X is doc-typed) do
  let Info = foreign debug.type-info(X.crochet-type);
  [
    tag -> "typed",
    content -> self for: X.content,
    type-name -> Info.name,
    package-name -> Info.package,
  ];
end


// -- Units
command debug-serialisation for: (X is doc-point2d) =
  [
    x -> self for: X.x,
    y -> self for: X.y,
  ];

command debug-serialisation for: (X is doc-em) =
  [
    unit -> "em",
    value -> X.value,
  ];

command debug-serialisation for: (X is doc-percent) =
  [
    unit -> "percent",
    value -> X.value,
  ];

command debug-serialisation for: (X is doc-pixels) =
  [
    unit -> "pixel",
    value -> X.value,
  ];

command debug-serialisation for: doc-unit-unset =
  nothing;