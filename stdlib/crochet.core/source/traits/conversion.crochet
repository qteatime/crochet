% crochet

command #float coerce: (X is integer)
  = foreign conversion.integer-to-float(X)
test
  assert (#float coerce: 1) =:= 1.0;
  assert (#float coerce: 0) =:= 0.0;
  assert (#float coerce: -1) =:= -1.0;
end

command #integer coerce: (X is float)
requires integral :: X =:= X truncate
  = foreign conversion.float-to-integer(X)
test
  assert (#integer coerce: 1.0) =:= 1;
  assert (#integer coerce: 0.0) =:= 0;
  assert (#integer coerce: -1.0) =:= -1;
end

command #interpolation coerce: (X is tuple)
  = foreign conversion.tuple-to-interpolation(X)
test
  assert (#interpolation coerce: []) =:= ("" as interpolation);
  assert (#interpolation coerce: ["a", 1, "c"]) =:= "a[1]c";
end

command #text coerce: (X is interpolation)
  = foreign conversion.interpolation-to-text(X)
test
  assert (#text coerce: ("abc" as interpolation)) =:= "abc";
  assert (#text coerce: "a["b"]c") =:= "abc";
end