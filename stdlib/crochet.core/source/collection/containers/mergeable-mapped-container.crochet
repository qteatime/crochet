% crochet

// -- Maps
implement mergeable-mapped-container for map;

/// Returns a new map that contains the key/value pairs of both maps.
/// If both maps have the same key, then the key/value pair of the second
/// map (`That`) will be used.
command map merge: (That is map) do
  new map(foreign map.merge(self.box, That.box));
test
  assert (#map empty merge: (#map from: [a -> 1, b -> 2]))
    === (#map from: [a -> 1, b -> 2]);

  assert (#map from: [a -> 1, b -> 2] | merge: #map empty)
    === (#map from: [a -> 1, b -> 2]);

  assert (#map from: [a -> 1, b -> 2] | merge: (#map from: [a -> 2, c -> 3]))
    === (#map from: [a -> 2, b -> 2, c -> 3]);

  assert (#map from: [a -> 1, b -> 2] | merge: (#map from: [c -> 3, d -> 4]))
    === (#map from: [a -> 1, b -> 2, c -> 3, d -> 4]);
end