% crochet

// -- Map
implement modifiable-mapped-container for map;

/// Returns a new map that contains the `Key`=`Value` pair provided.
command map at: Key put: Value do
  new map(foreign map.set(self.box, Key, Value));
test
  assert (#map empty | at: 1 put: 2 | at: 1) === 2;
  assert not (#map empty | at: 1 put: 2 | contains-key: 2);
  assert (#map empty | at: 1 put: 2 | at: 2 put: 3) ===
    (#map from: [
      #association key: 1 value: 2,
      #association key: 2 value: 3,
    ]);
  assert (#map empty | at: 1 put: 2 | at: 1 put: 3 | at: 1) === 3;
end

/// Returns a new map that does not contain the key/value pair described by
/// `Key`.
command map remove-at: Key do
  new map(foreign map.remove(self.box, Key));
test
  assert (#map empty | remove-at: 1) === #map empty;
  assert (#map empty | at: 1 put: 2 | remove-at: 1) === #map empty;
  assert (#map empty | at: 1 put: 2 | at: 3 put: 4 | remove-at: 1) === (#map empty | at: 3 put: 4);
end