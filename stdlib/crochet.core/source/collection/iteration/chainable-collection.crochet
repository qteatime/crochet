% crochet

// -- Lists
implement chainable-collection for list;

/// Transforms every element of the list with the given function, concatenates
/// all results returned by [Fun].
command list flat-map: (Fun is function-1) do
  foreign list.flatmap(self, Fun);
test
  assert ([] flat-map: { A in [A, A] }) === [];
  assert ([1, 2, 3] flat-map: { A in [A, A] }) === [1, 1, 2, 2, 3, 3];
end

/// Turns a list of lists into a flatter list.
command list flatten-once do
  self flat-map: { X in X };
test
  assert ([] flatten-once) === [];
  assert ([[1], [2, 3], [4, [5], 6]] flatten-once) === [1, 2, 3, 4, [5], 6];
end