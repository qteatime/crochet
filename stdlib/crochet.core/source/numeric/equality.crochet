% crochet

implement equality for integer;
implement equality for float-64bit;

/// True if two integers are equal.
command integer === (That is integer)
  = self =:= That
test
  assert 0 === 0;
  assert 1 === 1;
  assert not (1 === -1);
end

/// True if two floating point values are equal.
///
/// Note that we follow IEEE-754, so NaNs are unordered
/// and therefore never equal.
command float-64bit === (That is float-64bit)
  = self =:= That
test
  assert 0.0 === 0.0;
  assert 0.1 === 0.1;
  assert not (0.1 === 0.0);
  assert not (1.0 === -1.0);

  assert #float-64bit positive-infinity === #float-64bit positive-infinity;
  assert not (#float-64bit positive-infinity === #float-64bit negative-infinity);
  assert not (#float-64bit nan === #float-64bit nan);
  assert not (0.0 === #float-64bit nan);
end

/// True if two floating point values are not equal.
///
/// Note that we follow IEEE-754, so NaNs are unordered
/// and therefore never equal.
command (Self is float-64bit) =/= (That is float-64bit)
  = foreign float-64.neq(Self, That)
test
  assert 0.1 =/= 0.0;
  assert 1.0 =/= -1.0;
  assert 0.0 =/= #float-64bit nan;
  assert not (0.0 =/= 0.0);
  assert not (0.1 =/= 0.1);

  assert #float-64bit nan =/= #float-64bit nan;
  assert not (#float-64bit positive-infinity =/= #float-64bit positive-infinity);
  assert not (#float-64bit negative-infinity =/= #float-64bit negative-infinity);
  assert #float-64bit positive-infinity =/= #float-64bit negative-infinity;
end

// -- Equality across the numeric tower
/// True if two numbers of different types are equal if we convert them to
/// the lowest common type between them. This is often a lossy conversion.
command (X is integer) === (Y is float-64bit) = (X as float-64bit) === Y;
command (X is float-64bit) === (Y is integer) = X === (Y as float-64bit);

/// True if two numbers of different types are not equal if we convert them
/// to the lowest common type between them. This is often a lossy conversion.
command (X is integer) =/= (Y is float-64bit) = (X as float-64bit) =/= Y;
command (X is float-64bit) =/= (Y is integer) = X =/= (Y as float-64bit);

test "Numeric equality tower" do
  assert (1.0 === 1);
  assert (1.1 =/= 1);
  assert (1 === 1.0);
  assert (1 =/= 1.1);
end