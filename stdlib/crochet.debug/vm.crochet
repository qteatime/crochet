% crochet

singleton runtime-debugger;
capability runtime-introspection;
protect global runtime-debugger with runtime-introspection;
protect type runtime-debugger with runtime-introspection;

type vm-activation(box);
type vm-handler-stack(box);
type vm-universe(box);

command runtime-debugger current-activation =
  new vm-activation(foreign vm.current-activation())
    | parent | value-or-panic: "(unexpected top of activation stack)"
    | parent | value-or-panic: "(unexpected top of activation stack)";

command runtime-debugger current-universe =
  new vm-universe(foreign vm.current-universe());


command vm-activation parent do
  let Parent = foreign vm.parent-activation(self.box);
  condition
    when Parent is nothing => #result error: not-found;
    otherwise => #result ok: new vm-activation(Parent);
  end
end

command vm-activation handlers do
  new vm-handler-stack(foreign vm.activation-handlers(self.box));
end


command vm-activation to-text do
  foreign vm.activation-to-text(self.box);
end

command vm-handler-stack to-text do
  foreign vm.handler-stack-to-text(self.box);
end
