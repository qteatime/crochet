% crochet

singleton trace;

command internal compile: (C is tc-has-log) =
  foreign trace.tc-has-log(C.tag);

command internal compile: (C is tc-has-span) =
  foreign trace.tc-has-span(C.span.box);


command trace record: (Constraint is trace-constraint) =
  new trace-recorder(foreign trace.make-recorder(internal compile: Constraint));

command trace with-span: (Fn is (trace-span -> A)) -> A =
  foreign trace.with-span(Fn);

command trace-recorder stop do
  foreign trace.stop(self.box);
  self;
end

command trace-recorder start do
  foreign trace.start(self.box);
  self;
end

command trace-recorder events do
  let Events = foreign trace.events(self.box);
  Events map: (internal to-event: _);
end

command internal to-event: Event do
  condition
    when Event.tag === "LOG" =>
      new te-log(Event.log-tag, Event.location, Event.value);
  end
end