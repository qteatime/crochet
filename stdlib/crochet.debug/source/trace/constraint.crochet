% crochet

command internal compile: (C is tc-has-tag) =
  foreign trace.tc-has-tag(C.tag);

command internal compile: (C is tc-has-span) =
  foreign trace.tc-has-span(C.span.box);

command internal compile: (C is tc-or) =
  foreign trace.tc-or(internal compile: C.left, internal compile: C.right);

command internal compile: (C is tc-and) =
  foreign trace.tc-and(internal compile: C.left, internal compile: C.right);

command internal compile: (C is tc-instantiate) =
  foreign trace.tc-instantiate(C.static-type);

command internal compile: (C is tc-invoke) =
  foreign trace.tc-invoke(C.name);


command #trace-constraint has-tag: Tag =
  new tc-has-tag(Tag);

command #trace-constraint has-span: (Span is span) =
  new tc-has-span(Span);

command #trace-constraint instantiated: (Type is static-type) =
  new tc-instantiate(Type);

command #trace-constraint invoked: (Name is static-text) =
  new tc-invoke(Name);

command trace-constraint or (That is trace-constraint) =
  new tc-or(self, That);

command trace-constraint and (That is trace-constraint) =
  new tc-and(self, That);