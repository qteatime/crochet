% crochet

open crochet.ui.html;

relation Item* short-name: Name;
relation Item* name: Name;
relation Item* description: Description;
relation Item* on: Place;

relation Room* to: Direction* lays: Room;
relation Room* times-disturbed: N;

relation Player visited: Room*;
relation Player* at: Location;

relation Thing* place;

relation State state;

type state;
singleton on-going is state;
singleton won is state;
singleton lost is state;


type direction;
singleton north is direction with
  command to-html do
    "north" text
  end
end

singleton east is direction with
  command to-html do
    "east" text
  end
end

singleton south is direction with
  command to-html do
    "south" text
  end
end

singleton west is direction with
  command to-html do
    "west" text
  end
end

type thing;
type room is thing;

singleton foyer is room with
  name: "Foyer of the Opera House";
  short-name: "foyer";
  description:
    "You are standing in a spacious hall, splendidly decorated in red and gold,
    with glittering chanedliers overhead. The entrance from the street is to
    the north, and there are doorways south and west.";
  
  to: south lays: bar;
  to: west lays: cloakroom;
end

singleton cloakroom is room with
  name: "Cloakroom";
  short-name: "cloakroom";
  description:
    "The walls of this small room were clearly once lined with hooks,
    though now only one remains. The exit is a door to the east.";
  
  to: east lays: foyer;
end

singleton hook is thing with
  name: "Small Brass Hook";
  short-name: "hook";
  description:
    "It's just a small brass hook, screwed to the wall.";
  
  on: cloakroom;
  place;
end

singleton bar is room with
  name: "Foyer Bar";
  short-name: "bar";
  description:
    "The bar, much rougher than you'd have guessed after the opulence of the
    foyer to the north, is completely empty. There seems to be some sort of
    message scrawled in sawdust on the floor.";

  to: north lays: foyer;
  times-disturbed: 0;
end

singleton cloak is thing with
  name: "Velvet Cloak";
  short-name: "cloak";
  description:
    "A handsome cloak, of velvet trimmed with satin, and slightly spattered with
    raindrops. Its blackness is so deep that it almost seems to suck light from
    the room.";

  on: player;
end

singleton player with
  at: foyer;
end

command Room describe-full do
  let R = (search Room name: Name, Room description: Description) first;
  section: [
    paragraph: (strong: R.Name),
    paragraph: R.Description
  ];
end

command Room describe do
  match
    when cloak on: player, if Room =:= bar do
      paragraph: "It's pitch dark here. You can't see a thing.";
    end

    when player visited: Room, Room short-name: Name do
      paragraph: "You're back at the [Name]";
    end

    when Room name: Name, Room description: Description do
      fact player visited: Room;
      Room describe-full;
    end
  end first;
end

prelude
  fact on-going state;
end

scene main do
  header: [
    title: "Cloak of Darkness",
    subtitle: "The classic interactive fiction demo"
  ] | show;
  
  paragraph: 
    "Hurrying through the rainswept November night, you're glad to see the
    bright lights of the Opera House. It's surprising that there aren't
    more people about but, hey, what do you expect in a cheap demo game...?"
  | show;

  foyer describe show;

  simulate for [player]
  until not on-going state
  on pick-action: Actions for: _ do
    let Items = for X in Actions do [Title -> X.Title, Value -> X] end;
    (menu: Items) show selected;
  end
end


action "Go [Direction]"
when
  player at: Room,
  Room to: Direction lays: Target,
  not player visited: Target
do
  Target describe show;
  fact player at: Target;
end

action "Go [Direction], to the [Name]"
when
  player at: Room,
  Room to: Direction lays: Target,
  Target short-name: Name,
  player visited: Target
do
  Target describe show;
  fact player at: Target;
end

action "Go north, to the street"
when player at: foyer
do
  "You've only just arrived, and besides, the weather outside seems to be
  getting worse." show;
end

action "Look around"
when
  player at: Room,
  not (cloak on: player, player at: bar)
do
  Room describe-full show;
end


// Bar actions
action "Look around"
when
  player at: bar,
  cloak on: player,
  bar times-disturbed: N
do
  "In the dark? You could easily disturb something!" show;

  fact bar times-disturbed: (N + 1);
end

action "Examine the message"
when
  player at: bar,
  not cloak on: player,
  bar times-disturbed: N
do
  condition
    when N < 2 do
      "The message, neatly marked in the sawdust reads... [strong: "you won"]" show;
      fact won state;
    end

    always do
      "The message has been carelessly trampled, making it difficult to read.
       You can just distinguish the words... [strong: "you have lost"]" show;
       fact lost state;
    end
  end
end


// Cloakroom actions
action "Place cloak on the [Name]"
when
  player at: cloakroom,
  cloak on: player,
  Thing on: cloakroom,
  Thing short-name: Name,
  Thing place
do
  "You place your cloak on [Name]." show;

  fact cloak on: Thing;
end

action "Take cloak from the [Name]"
when
  player at: cloakroom,
  Thing on: cloakroom,
  cloak on: Thing,
  Thing short-name: Name,
  Thing place
do
  "You take your cloak from [Name]." show;

  fact cloak on: player;
end