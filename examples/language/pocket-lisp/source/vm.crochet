% crochet

command vm try-parse: (Source is text) do
  (force grammar) parse: Source rule: "Program"
    | map: { Tree in (force to-ast) transform: Tree };
end

command vm parse: (Source is text) do
  vm try-parse: Source
    | recover: { Error in panic-without-trace: Error tag: "syntax-error" }
    | value;
end

command vm run: (Program is plisp-program) do
  let Frame = new frame(nothing, vm global-environment, nothing);
  Frame evaluate: Program;
end

command vm run: (Program is plisp-program) with-environment: (Env is environment) do
  let Frame = new frame(nothing, Env, nothing);
  Frame evaluate: Program;
end

command vm with-panic-on-error: (Block is (() -> A)) do
  handle
    Block();
  with
    on pocket-lisp.raw-raise(Error) =>
      panic: (vm format-error: Error) tag: "runtime-error";
    
    on pocket-lisp.raise(Frame, Form, Error) =>
      panic: (vm format-error: Error frame: Frame form: Form) tag: "runtime-error";
  end
end