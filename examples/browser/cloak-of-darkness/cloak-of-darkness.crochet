% crochet

open crochet.novella;

singleton game;

relation Item* short-name: Name;
relation Item* name: Name;
relation Item* description: Description;
relation Item* on: Place;

relation Room* to: Direction* lays: Room;
relation Room* times-disturbed: N;

relation Player visited: Room*;
relation Player* at: Location;

relation Thing* place;

relation State state;

enum state = on-going, won, lost;
enum direction = north, east, south, west;

command north as element = "north" as element;
command east as element = "east" as element;
command south as element = "south" as element;
command west as element = "west" as element;

type thing;
type room is thing;

singleton foyer is room with
  name: "Foyer of the Opera House";
  short-name: "foyer";
  description:
    "You are standing in a spacious hall, splendidly decorated in red and gold,
    with glittering chanedliers overhead. The entrance from the street is to
    the north, and there are doorways south and west.";
  
  to: south lays: bar;
  to: west lays: cloakroom;
end

singleton cloakroom is room with
  name: "Cloakroom";
  short-name: "cloakroom";
  description:
    "The walls of this small room were clearly once lined with hooks,
    though now only one remains. The exit is a door to the east.";
  
  to: east lays: foyer;
end

singleton hook is thing with
  name: "Small Brass Hook";
  short-name: "hook";
  description:
    "It's just a small brass hook, screwed to the wall.";
  
  on: cloakroom;
  place;
end

singleton bar is room with
  name: "Foyer Bar";
  short-name: "bar";
  description:
    "The bar, much rougher than you'd have guessed after the opulence of the
    foyer to the north, is completely empty. There seems to be some sort of
    message scrawled in sawdust on the floor.";

  to: north lays: foyer;
  times-disturbed: 0;
end

singleton cloak is thing with
  name: "Velvet Cloak";
  short-name: "cloak";
  description:
    "A handsome cloak, of velvet trimmed with satin, and slightly spattered with
    raindrops. Its blackness is so deep that it almost seems to suck light from
    the room.";

  on: player;
end

singleton player with
  at: foyer;
end

command Room describe-full do
  let R = (search Room name: Name, Room description: Description) first;
  novella section: [
    novella text: R.Name | strong,
    novella paragraph: R.Description
  ];
end

command Room describe do
  let Desc =
    match
      when cloak on: player, if Room =:= bar do
        "It's pitch dark here. You can't see a thing.";
      end

      when player visited: Room, Room short-name: Name do
        "You're back at the [Name]";
      end

      when Room name: Name, Room description: Description do
        fact player visited: Room;
        Room describe-full;
      end
    end;
  Desc first;
end

prelude
  fact on-going state;
end

command main-html: Root do
  novella with-root: Root do: {
    game run;
  }
end

command game run do
  novella show: [
    novella header: [
      novella text: "Cloak of Darkness" | title,
      novella text: "The classic interactive fiction demo" | subtitle,
    ],

    novella paragraph:
      "Hurrying through the rainswept November night, you're glad to see the
      bright lights of the Opera House. It's surprising that there aren't
      more people about but, hey, what do you expect in a cheap demo game...?",
    
    novella paragraph: foyer describe,
  ];

  simulate for [player]
  until not on-going state
  on pick-action: Actions for: _ do
    novella choose-action: Actions;
  end
end


action player go-unvisited "Go [self.Direction]"
when
  player at: Room,
  Room to: Direction lays: Target,
  not player visited: Target
do
  novella show: Target describe;
  fact player at: Target;
end

action player go-visited "Go [self.Direction], to the [self.Name]"
when
  player at: Room,
  Room to: Direction lays: Target,
  Target short-name: Name,
  player visited: Target
do
  novella show: Target describe;
  fact player at: Target;
end

action player go-street "Go north, to the street"
when player at: foyer
do
  novella show: [
    novella paragraph: 
      "You've only just arrived, and besides, the weather outside seems to be
      getting worse."
  ]
end

action player look-around "Look around"
when
  player at: Room,
  not (cloak on: player, player at: bar)
do
  novella show: Room describe-full;
end


// Bar actions
action player look-around-bar "Look around"
when
  player at: bar,
  cloak on: player,
  bar times-disturbed: N
do
  novella show: "In the dark? You could easily disturb something!";

  fact bar times-disturbed: (N + 1);
end

action player examine-message "Examine the message"
when
  player at: bar,
  not cloak on: player,
  bar times-disturbed: N
do
  condition
    when N < 2 do
      novella show: [
        novella paragraph:
          "The message, neatly marked in the sawdust reads...
           [novella text: "you won" | strong]"
      ];
      fact won state;
    end

    otherwise do
      novella show: [
        novella paragraph:
          "The message has been carelessly trampled, making it difficult
           to read. You can just distinguish the words...
           [novella text: "you have lost" | strong]"
      ];
      fact lost state;
    end
  end
end


// Cloakroom actions
action player place-cloak "Place cloak on the [self.Name]"
when
  player at: cloakroom,
  cloak on: player,
  Thing on: cloakroom,
  Thing short-name: Name,
  Thing place
do
  novella show: "You place your cloak on the [Name].";

  fact cloak on: Thing;
end

action player take-cloak "Take cloak from the [self.Name]"
when
  player at: cloakroom,
  Thing on: cloakroom,
  cloak on: Thing,
  Thing short-name: Name,
  Thing place
do
  novella show: "You take your cloak from [Name].";

  fact cloak on: player;
end