% crochet

open crochet.concurrency;
open crochet.ui.agata;
open crochet.time;

singleton todo-app;

command main-html: Root do
  timer with-real-timer: {
    agata-dom with-root: Root do: {
      let Todo = new todo([]);
      let Cell = #observable-cell with-value: Todo;
      let New-title = #observable-cell with-value: "";

      handle
        agata show: (#widget flex-column: [
          #dom-widget css: "
            .todo-done {
              text-decoration: line-through;
              font-style: italic;
            }
          ",
          Cell,
          #widget space | vertical: (0.5 as em),
          #widget divider: "half",
          #widget space | vertical: (1.0 as em),
          #widget flex-row: [
            #flex-child with: (#widget text-input | placeholder: "I want to..." | value: New-title)
              | grow: 1,
            #widget space | horizontal: (1.0 as em),
            #widget icon-button: "plus"
              | disabled: (New-title map: { X in X trim === "" })
              | on-click: { _ in perform todo-ui.add(New-title value) }
          ]
          | align-items: "flex-end",
        ]);
      with
        on todo-ui.add(Title) do
          New-title <- "";
          Cell <- Cell value add: (#todo-item with-title: Title);
          continue with nothing;
        end

        on todo-ui.remove(Id) do
          Cell <- Cell value remove: Id;
          continue with nothing;
        end

        on todo-ui.mark(Id, Done) do
          Cell <- Cell value mark: Id done: Done;
          continue with nothing;
        end
      end
    };
  }
end
